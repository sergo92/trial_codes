int binary_search(struct figure_array *the_array, int search_sq)
{
	int lower = 0;
	int upper = the_array->size;
	int index = the_array->size/2;
	
	int sq = (the_array->a_square[index].vertex4.x - the_array->a_square[index].vertex1.x) * 
			(the_array->a_square[index].vertex3.x - the_array->a_square[index].vertex2.x);				  
					
	if(sq == search_sq)
		return index;
			
	if(search_sq > sq){
		lower = index;
		index = (upper + lower)/2;
		for(int i = 0; i<the_array->size/2; i++)
		{
			sq = (the_array->a_square[index].vertex4.x - the_array->a_square[index].vertex1.x) * 
				(the_array->a_square[index].vertex3.x - the_array->a_square[index].vertex2.x);
			
			if(sq == search_sq)
				return index;
					
			if(search_sq > sq){
				lower = index;
				index = (upper + lower)/2;
				
			}
				
			if(search_sq < sq){
				upper = index;
				index = (upper + lower)/2;

			}
			if(the_array->size/2 - i == 1)
				return NO_ELEMENTS;		
		}			
	}
		
	if(search_sq < sq){
		upper = index;
		index = upper/2;
		for(int i = 0; i<the_array->size/2; i++)
		{
			sq = (the_array->a_square[index].vertex4.x - the_array->a_square[index].vertex1.x) * 
				(the_array->a_square[index].vertex3.x - the_array->a_square[index].vertex2.x);

			if(sq == search_sq)
				return index;
					
			if(search_sq > sq){
				lower = index;
				index = (upper + lower)/2;
			}
				
			if(search_sq < sq){
				upper = index;
				index = (upper - lower)/2;
			}	
			if(the_array->size/2 - i == 1)
				return NO_ELEMENTS;		
		}				
	}			
}
